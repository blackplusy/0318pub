------------
复习
1.常用的数据库
	oracle
	mysql
	sqlserver
2.mysql的基础
	mysql的管理员：root
	mysql的端口：3306
	mysql的服务：
		mysqld	mysql的主服务
		mysql   mysql的客户端服务
	检查mysql服务：
		tasklist | find "mysqld"
	检查mysql端口：
		netstat -an | find "3306"
	管理mysql的工具：
		mysql workbench
		sqlyog(小海豚)
		navicat
		dbeaver
	登陆命令：
		mysql -u root -p
		mysql -h 127.0.0.1 -u root -p
		localhost==127.0.0.1==电脑本机
	登陆方式：
		进入到命令所在文件夹
		设置环境变量
	基础命令:
		show databases;
		select database();
		use test;
		show tables;
3.表结构
	数据类型
		字符	 	char  varchar
		数字     int
		日期     date
	表结构的创建
		语法:create table 表(
			列  数据类型，
			列  数据类型，
			。。。
		)
	查看表结构
		语法：desc 表名;
	表结构的修改
		增加列：
		alter table 表 add 列 数据类型;
		修改列：
		alter table 表 modify 列 数据类型;
		删除列：
		alter table 表 drop column 列名;
		重命名列：
		alter table 表 change 原有列 新列 数据类型;（mysql 5.5）
		alter table 表 rename column 原有列 to 新列;
	表结构的删除
		语法：drop table 表;
===================================================
a.约束
a1.常见约束
	主键约束   
		列中的数据是唯一的，每张表中只能有一个主键，不能为空
	唯一约束
		列中的数据是唯一的，每张表中可以有多个唯一约束，作为主键约束的补充，可以为空
	非空约束
		列中的数据不能为空
	检查约束
		列中的数据是否满足条件
	外键(参考约束)
		列中的数据来源于另外一张表中的数据
	注意：taobao中一个订单对应一个客户，一个客户可以有多个订单
a2.约束的语法
	create table 表名(
		列 数据类型 primary key,     #主键约束
		列 数据类型 unique ,         #唯一约束
		列 数据类型 not null,		#非空约束
		列 数据类型 check(检查条件)， #检查约束
		列 数据类型 references 被参考表(被参考列)   #外键约束
	)；

b.数据的新增
	字符类型数据需要加单引号
	数字类型数据直接使用
	日期类型数据需要加单引号
	列和值的顺序要对应
	b1.向表中所有列新增数据
	语法：insert into 表名 values(值1,值2....);
	需求:向goods表中新增数据，商品名称gun，价格500，日期 2000-01-01
	insert into goods values('gun',500,'2000-01-01');
	b2.向表中指定列新增数据
	语法:insert into 表(列1，列2...) values(值1，值2...);
	需求：向goods表中新增数据，商品名称ball，价格200
	insert into goods(name,price) values('ball',200);
c.数据的修改
	字符类型数据需要加单引号
	数字类型数据直接使用
	日期类型数据需要加单引号
	语法:update 表名 set 列=值 where 条件;
	注意：如果不增加where条件，默认修改的是在整个列的数据，如果增加where条件，修改的是指定数据
	需求：修改goods表中商品名称是gun的价格为998
	update goods set price=998 where name='gun';
	需求：修改goods表中所有商品价格为0
	update goods set price=0;
d.数据的删除
	delete 		删除指定数据，DML，删除数据可以找回
	truncate    删除整张表中的数据，DDL，删除的数据无法找回
	d1.delete
	语法:delete from 表 where 条件;
	注意：如果增加where条件删除的是指定数据，如果不加where，删除是整张表中的数据
	需求:删除goods表中所有商品名称是gun的数据
	delete from goods where name='gun';
	需求:删除goods表中所有数据
	delete from goods ;
	d2.truncate
	语法：trncate table 表;
	又叫做截断表
	需求:删除goods表中所有数据
	truncate table goods;
e.数据的查询
        ecshop表结构说明：http://book.ecmoban.com/images/db.htm
	e1.查询的分类
		简单查询
		多表查询
		子查询
		分组查询
	e2.简单查询
	查询可以查询指定列、指定的行，指定行的列
	注意：select后面from前面是和列相关的，where条件是和行相关的,*是代表所有列的意思
	语法：select 列 from 表 where 条件;
	需求：查询ecs_goods表中所有商品名称
	select goods_name from ecs_goods;
	需求：查询ecs_goods表中商品名称为KD876的所有信息
	select * from ecs_goods where goods_name='KD876';
	需求：查询ecs_goods表中商品名称为诺基亚E66的本店售价
	select shop_price from ecs_goods where goods_name='诺基亚E66';

练习：
1.创建表student，里面3个列，名字(name)字符类型，最多放10个字符,年龄(age) 数字类型，生日(birth) 日期类型
	create table student(
		name char(10),
		age  int,
		birth date
	);

2.新增学员数据数据
heygor  18  1998-02-02
baigor  19  1998-02-02
simida  20  1998-02-02
koiniqiwa  35  1998-02-02
haleshao  88  1998-02-02
odusang  18  1998-02-02
	insert into student values
	('heygor',18,'1998-02-02'),
	('baigor',19,'1998-02-02'),
	('simida',20,'1998-02-02'),
	('koniiqiwa',35,'1998-02-02'),
	('haleshao',88,'1998-02-02'),
	('odusang',18,'1998-02-02');
3.修改名字为heygor的年龄为200
	update student set age=200 where name='heygor';

4.修改baigor的名字为gaga
	update student set name='gaga' where name='baigor';

5.查询所有学员名字
	select name from student;

6.查询年龄是88岁的学员所有信息
	select * from student where age=88;

7.查询年龄为35的学员的名字和生日
	select name ,birth from student where age=35;
	
a.where 条件
简单查询的语法：select 列 from 表 where 条件;
a1.比较运算
	>	大于
	<   小于
	=   等于
	>=	大于等于
	<=	小于等于
	!=	不等于
	<>	不等于
	需求：查询ecs_goods表中本店售价高于2000的商品名称和本店售价
	select goods_name,shop_price from ecs_goods where shop_price>2000;
	需求：查询ecs_goods表中商品名称不是KD876的所有信息
	select * from ecs_goods where goods_name<>'KD876';
a2.关系运算
	and		同时满足
	or 		满足一个条件即可
	not     不满足条件
	需求：查询ecs_goods表中本店售价高于2000并且低于2500的商品的所有信息
	select * from ecs_goods where shop_price>2000 and shop_price<2500;
a3.区间
	between...and...
	包括区间中的两个端点，小在前，大在后
	需求：查询ecs_goods表中本店售价范围在2300和5000之间的所有商品名称
	select goods_name from ecs_goods where shop_price>=2300 and shop_price<=5000;
	select goods_name from ecs_goods where shop_price between 2300 and 5000;
	
a4.模糊查询
	当信息不完整时候查询，通常是和字符串一起使用
	like  	模糊查询关键字
	_		一个字符
	%		任意个字符
	需求：查询ecs_goods表中商品名称以诺基亚开头的所有信息
	select * from ecs_goods where goods_name like '诺基亚%';
	需求：查询ecs_goods表中商品名称以6结尾的商品的名称
	select * from ecs_goods where goods_name like '%6';
	需求：查询ecs_goods表中商品名称是6个字符的所有信息
	select * from ecs_goods where goods_name like '______';
a5.空值的查询
	null：没有任何数据类型，没有任何值,不能用于比较和运算
	查询时候使用is null 或者is not null
	需求：查询ecs_goods表中suppliers_id为空的所有数据
	select * from ecs_goods	where suppliers_id is null;
	需求：查询ecs_goods表中suppliers_id不为空的所有数据
	select * from ecs_goods	where suppliers_id is not null;
a6.in
	在..里面，或的关系
	需求：查询ecs_goods表中商品名称是KD876或者诺基亚的所有信息
	select * from ecs_goods where goods_name in('KD876','诺基亚');
a7.常用函数
	upper()		大写
	lower()		小写
	round()		小数点后保留几位
	avg()       平均值
	select goods_name,lower(goods_name),upper(lower(goods_name)) from ecs_goods;
	select avg(shop_price),round(avg(shop_price),2) from ecs_goods;


练习：
1.查询ecs_goods表中本店售价高于3000的所有信息
select * from ecs_goods where shop_price>3000;

2.查询ecs_goods表中商品名称为诺基亚E66或者iphone的所有信息
select * from ecs_goods where goods_name in('诺基亚E66','iphone');
select * from ecs_goods where goods_name='诺基亚E66' or goods_name='iphone';

3.查询ecs_goods表中商品本店售价低于2000并且市场售价高于2000的所有商品名称
select goods_name from ecs_goods where shop_price<2000 and market_price>2000;

4.查询ecs_goods表中商品本店售价范围在2000-2500或者本店售价在1000-1500的所有商品名称和市场售价
select goods_name,market_price from ecs_goods where shop_price between 2000 and 2500 or
shop_price between 1000 and 1500;

5.查询ecs_goods表中商品名称以诺基亚开头或者本店售价高于3000的所有商品信息
select * from ecs_goods where goods_name like '诺基亚%' or shop_price>3000;




















connect  链接
affect   作用
record   记录
warning  警告
constraint 约束
primary    主要、核心
key        钥匙、键
unique   唯一
check	检查
into    进入
value 	值
references 参考、借鉴
set     设置
where	哪里
between 在...之内，之间
like	像


